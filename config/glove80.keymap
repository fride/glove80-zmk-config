/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define HOST_OS 2
#define QUICK_TAP_MS 175

#include "../zmk-nodefree-config/helper.h"
#include "../zmk-nodefree-config/international_chars/greek.dtsi"
#include "../zmk-nodefree-config/international_chars/german.dtsi"
#include "fride_config.h"

&sk {  // sticky-key config
    release-after-ms = <900>;  // release after 0.6s
    quick-release;             // no double capitalization when rolling keys
};

&sl {  // sticky-layer config
    ignore-modifiers;          // allow chording sticky mods & layers
};

&lt {  // layer-tap config
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <QUICK_TAP_MS>;
};

#define MAKE_HRM(NAME, HOLD, TAP, TRIGGER_POS) \
    ZMK_BEHAVIOR(NAME, hold_tap, \
        flavor = "balanced"; \
        tapping-term-ms = <280>; \
        quick-tap-ms = <QUICK_TAP_MS>; \
        require-prior-idle-ms = <150>; \
        bindings = <HOLD>, <TAP>; \
        hold-trigger-key-positions = <TRIGGER_POS>; \
        hold-trigger-on-release; \
    )
MAKE_HRM(hml, &kp, &kp, RIGHT_HAND_KEYS THUMB_KEYS)  // left-hand HRMs
MAKE_HRM(hmr, &kp, &kp, LEFT_HAND_KEYS THUMB_KEYS)  // right-hand HRMs

#define HOME_T &hml LSHFT  T 
#define HOME_N &hml LGUI  N
#define HOME_R &hml LALT R
#define HOME_S &hml LCTRL  S

#define HOME_C &hmr RSHFT C
#define HOME_A &hmr RGUI  A
#define HOME_I &hmr LALT  I
#define HOME_REP &hmr LCTRL &key_repeat

ZMK_BEHAVIOR(auto_shift, hold_tap,
    flavor = "tap-preferred";    
    tapping_term_ms = <QUICK_TAP_MS>;
    quick_tap_ms = <0>;    
    bindings = <&kp>, <&kp>;
)

#define AS(keycode) &as LS(keycode) keycode

/ {    

    #include "fride_macros.dtsi"
    #include "fride_behaviors.dtsi"
    #include "fride_combos.dtsi"

/*
    v l h k q   j f o u ,
    s r n t w   y c a i _
    z x m d b   p g ' ; .
                  e
*/
    keymap {
        compatible = "zmk,keymap";
        default_layer {
               bindings = <
                &kp F1         &kp F2   &kp F3      &kp F4      &kp F5                                                                                            &kp F6    &kp F7      &kp F8      &kp F9      &kp F10
                &kp EQUAL      &kp N1   &kp N2      &kp N3      &kp N4      &kp N5                                                                     &kp N6     &kp N7    &kp N8      &kp N9      &kp N0      &kp MINUS
                &kp Q          &kp V    &kp L       &kp H       &kp K       &kp Q                                                                      &kp J      &kp F     &kp O       &kp U       &kp COMMA   &kp BSLH
                &kp Z          HOME_S   HOME_R      HOME_N      HOME_T      &lt l_umlaut W                                                             &kp Y      HOME_C    HOME_A      HOME_I      HOME_REP     &kp MINUS
                &kp GRAVE      &kp Z    &kp X       &kp M       &kp D       &kp B   &kp LSHFT   &kp LCTRL   &kp L      &kp LGUI  &kp RCTRL &AppSwap    &kp P      &kp G     &kp SQT     &kp SEMI    &kp DOT      &kp PG_UP
                &magic MAGIC 0 &kp HOME &kp END     &kp LEFT    &kp RIGHT           NAV_SPCAE   &sk LSHFT   &kp DEL    &kp RALT  &sk RSHFT &kp E                 &kp LPAR  &kp LBKT    &kp LBKT   &kp RBKT    &magic MAGIC 0
            >;
        };

        l_nav {
            bindings = <
                &kp C_BRI_DN      &kp C_BRI_UP        &kp C_PREV      &kp C_NEXT      &kp C_PP                                                                                                           &kp C_MUTE   &kp C_VOL_DN &kp C_VOL_UP  &trans          &kp PAUSE_BREAK
                &trans            &trans              &trans          &trans          &trans          &kp HOME                                                                              &kp LPAR     &kp KP_NUM   &kp KP_EQUAL &kp KP_DIVIDE &kp KP_MULTIPLY &kp PSCRN
                &trans            &trans              &none           &kp UP          &none           &kp END                                                                               &kp RPAR     &kp BSPC     &kp UP        &kp DEL      &kp SLCK        &none
                &trans            &sk LSHIFT          &sk LCTRL       &sk LALT        &sk LGUI       &kp PG_UP                                                                             &kp PRCNT    &kp LEFT     &kp DOWN     &kp RIGHT     &kp RIGHT       &none
                &trans            &kp K_CMENU         &none           &kp F11         &kp F12         &kp PG_DN       &AppSwap      &trans      &to DEFAULT &trans      &trans      &trans    &kp COMMA    &kp KP_N1    &kp KP_N2    &kp KP_N3     &kp KP_ENTER    &trans
                &trans            &kp CAPS            &kp INS         &kp F11         &kp F12                         &trans      &trans      &trans      &trans      &trans      &trans                 &kp KP_N0    &kp KP_N0    &kp KP_DOT    &kp KP_ENTER    &trans
            >;
        };
        l_num {
            bindings = <
                &kp C_BRI_DN      &kp C_BRI_UP        &kp C_PREV      &kp C_NEXT      &kp C_PP                                                                                                           &kp C_MUTE   &kp C_VOL_DN &kp C_VOL_UP  &trans             &kp PAUSE_BREAK
                &trans            &trans              &trans          &trans          &trans          &kp HOME                                                                              &kp LPAR     &kp KP_NUM   &kp KP_EQUAL &kp KP_DIVIDE &kp KP_MULTIPLY    &kp PSCRN
                &trans            &trans              &none           &kp UP          &none           &kp END                                                                               &kp PERCENT  &kp N7       &kp N8        &kp N9      &kp COLON          &kp K
                &trans            &sk LSHIFT          &sk LCTRL       &sk LALT        &sk LGUI        &kp PG_UP                                                                             &kp PLUS     &kp N4       &kp N5        &kp N6      &kp MINUS          &kp J
                &trans            &kp K_CMENU         &none           &kp F11         &kp F12         &kp PG_DN       &AppSwap    &trans      &to DEFAULT &kp LT      &kp GT      &kp EQUAL &kp STAR     &kp N1       &kp N2        &kp N3      &kp SLASH          &kp G
                &trans            &kp CAPS            &kp INS         &kp F11         &kp F12                         &trans      &trans      &trans      &kp COMMA   &kp DOT     &kp N0                 &trans       &trans       &trans       &trans             &trans
            >;
        };

        magic_layer {
            bindings = <
                &bt BT_CLR        &none               &none           &none           &none                                                                                                           &none      &none      &none      &none      &bt BT_CLR_ALL
                &none             &to 0               &to 1           &none           &none           &none                                                                                &none      &none      &none      &none      &none      &none
                &none             &rgb_ug RGB_SPI     &rgb_ug RGB_SAI &rgb_ug RGB_HUI &rgb_ug RGB_BRI &rgb_ug RGB_TOG                                                                      &none      &none      &none      &none      &none      &none
                &bootloader       &rgb_ug RGB_SPD     &rgb_ug RGB_SAD &rgb_ug RGB_HUD &rgb_ug RGB_BRD &rgb_ug RGB_EFF                                                                      &none      &none      &none      &none      &none      &bootloader
                &sys_reset        &none               &none           &none           &none           &none           &bt_2     &bt_3     &none            &none     &none     &none       &none      &none      &none      &none      &none      &sys_reset
                &none             &none               &none           &none           &none                           &bt_0     &bt_1     &out OUT_USB     &none     &none     &none                  &none      &none      &none      &none      &none
            >;
        };

        l_umlaut  { 
            bindings = < 
                    &trans            &trans              &trans          &trans          &trans                                                                                                           &kp C_MUTE   &kp C_VOL_DN &kp C_VOL_UP  &none           &kp PAUSE_BREAK 
                    &trans            &trans              &trans          &trans          &trans          &kp HOME                                                                              &trans       &trans       &trans       &trans        &trans          &trans 
                    &trans            &trans              &trans          &trans          &trans          &trans                                                                                &trans       &trans       &trans       &trans        &de_eszett      &trans 
                    &trans            &trans              &trans          &trans          &trans          &trans                                                                                &trans       &trans       &trans       &trans        &trans          &trans 
                    &trans            &trans              &trans          &trans          &trans          &trans          &trans      &trans      &trans      &trans      &trans      &trans    &trans       &trans       &de_ae       &de_oe        &de_ue          &trans 
                    &trans            &kp CAPS            &kp INS         &kp F11         &kp F12                         &trans      &trans      &trans      &trans      &trans      &trans                 &trans       &trans       &trans        &trans          &trans 
            >; 
        };
    };
};