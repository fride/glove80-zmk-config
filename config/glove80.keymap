/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#include "fride_config.h"

#define HOME_D &hrm_d LGUI  D 
#define HOME_R &hrm_r LALT  R
#define HOME_T &hmr   LSFT T

#define HOME_N &hrm_n RGUI  N
#define HOME_E &hrm_e RALT  E
#define HOME_A &hmr  RSFT A

/ {    

    #include "fride_macros.dtsi"
    #include "fride_behaviors.dtsi"
    #include "fride_combos.dtsi"
/*

        pz xq  h  g  j   #@ .: /* "! '?  
         c  s  n  t  k   ,; a  e  i  m  
         b  f  l  d  v   -+ u  o  y  w  
r   ‚ê£  
*/

    keymap {
        compatible = "zmk,keymap";
        default_layer {
               bindings = <
                &kp F1         &kp F2   &kp F3      &kp F4      &kp F5                                                                                             &kp F6    &kp F7      &kp F8      &kp F9      &kp F10
                &kp EQUAL      &kp N1   &kp N2      &kp N3      &kp N4      &kp N5                                                                     &kp N6      &kp N7    &kp N8      &kp N9      &kp N0      &kp MINUS
                &kp Q          &kp P    &kp X       &kp H       &kp G       &kp J                                                                      &kp HASH    &kp DOT   &kp SLASH   &kp EQUAL   &kp SQT  &kp Q
                &kp Z          &kp C    &kp S       &kp N       HOME_T      &kp K                                                                      &kp COMMA   HOME_A    &kp E       &kp I       &kp M    &kp Z
                &kp GRAVE      &kp B    &kp F       &kp L       &kp D       &kp V   &kp LSHFT   &kp LCTRL   &kp L      &kp LGUI  &kp RCTRL &AppSwap    &kp MINUS   &kp U     &kp O       &kp Y       &kp W    &kp PG_UP
                &magic MAGIC 0 &kp HOME &kp END     &kp LEFT    &kp RIGHT           NAV_R        &sl l_num  &kp DEL     &kp RALT  &kp RET   NAV_SPCAE             &kp LPAR  &kp LBKT    &kp LBKT    &kp RBKT    &magic MAGIC 0
            >;
        };

        l_nav {
            bindings = <
                &kp C_BRI_DN      &kp C_BRI_UP        &kp C_PREV      &kp C_NEXT      &kp C_PP                                                                                                           &kp C_MUTE   &kp C_VOL_DN &kp C_VOL_UP  &trans          &kp PAUSE_BREAK
                &trans            &trans              &trans          &trans          &trans          &kp HOME                                                                              &kp LPAR     &kp KP_NUM   &kp KP_EQUAL &kp KP_DIVIDE &kp KP_MULTIPLY &kp PSCRN
                &trans            &trans              &none           &kp UP          &none           &kp END                                                                               &kp RPAR     &kp BSPC     &kp UP        &kp DEL      &kp SLCK        &none
                &trans            &sk LSHIFT          &sk LCTRL       &sk LALT        &sk LGUI       &kp PG_UP                                                                             &kp PRCNT    &kp LEFT     &kp DOWN     &kp RIGHT     &kp RIGHT       &none
                &trans            &kp K_CMENU         &none           &kp F11         &kp F12         &kp PG_DN       &AppSwap      &trans      &to DEFAULT &trans      &trans      &trans    &kp COMMA    &kp KP_N1    &kp KP_N2    &kp KP_N3     &kp KP_ENTER    &trans
                &trans            &kp CAPS            &kp INS         &kp F11         &kp F12                         &trans      &trans      &trans      &trans      &trans      &trans                 &kp KP_N0    &kp KP_N0    &kp KP_DOT    &kp KP_ENTER    &trans
            >;
        };
        l_num {
            bindings = <
                &kp C_BRI_DN      &kp C_BRI_UP        &kp C_PREV      &kp C_NEXT      &kp C_PP                                                                                                           &kp C_MUTE   &kp C_VOL_DN &kp C_VOL_UP  &trans             &kp PAUSE_BREAK
                &trans            &trans              &trans          &trans          &trans          &kp HOME                                                                              &kp LPAR     &kp KP_NUM   &kp KP_EQUAL &kp KP_DIVIDE &kp KP_MULTIPLY    &kp PSCRN
                &trans            &trans              &none           &kp UP          &none           &kp END                                                                               &kp PERCENT  &kp N7       &kp N8        &kp N9      &kp COLON          &kp K
                &trans            &sk LSHIFT          &sk LCTRL       &sk LALT        &sk LGUI        &kp PG_UP                                                                             &kp PLUS     &kp N4       &kp N5        &kp N6      &kp MINUS          &kp J
                &trans            &kp K_CMENU         &none           &kp F11         &kp F12         &kp PG_DN       &AppSwap    &trans      &to DEFAULT &kp LT      &kp GT      &kp EQUAL &kp STAR     &kp N1       &kp N2        &kp N3      &kp SLASH          &kp G
                &trans            &kp CAPS            &kp INS         &kp F11         &kp F12                         &trans      &trans      &trans      &kp COMMA   &kp DOT     &kp N0                 &trans       &trans       &trans       &trans             &trans
            >;
        };

        magic_layer {
            bindings = <
                &bt BT_CLR        &none               &none           &none           &none                                                                                                           &none      &none      &none      &none      &bt BT_CLR_ALL
                &none             &to 0               &to 1           &none           &none           &none                                                                                &none      &none      &none      &none      &none      &none
                &none             &rgb_ug RGB_SPI     &rgb_ug RGB_SAI &rgb_ug RGB_HUI &rgb_ug RGB_BRI &rgb_ug RGB_TOG                                                                      &none      &none      &none      &none      &none      &none
                &bootloader       &rgb_ug RGB_SPD     &rgb_ug RGB_SAD &rgb_ug RGB_HUD &rgb_ug RGB_BRD &rgb_ug RGB_EFF                                                                      &none      &none      &none      &none      &none      &bootloader
                &sys_reset        &none               &none           &none           &none           &none           &bt_2     &bt_3     &none            &none     &none     &none       &none      &none      &none      &none      &none      &sys_reset
                &none             &none               &none           &none           &none                           &bt_0     &bt_1     &out OUT_USB     &none     &none     &none                  &none      &none      &none      &none      &none
            >;
        };

        MAGIC_LAYER(MAGIC_O,    &kp O)
        MAGIC_LAYER(MAGIC_Y,    &kp Y)
        MAGIC_LAYER(MAGIC_U   , &kp U)
        MAGIC_LAYER(MAGIC_ON  , &mg_on)
        MAGIC_LAYER(MAGIC_UST , &mg_ust)
        MAGIC_LAYER(MAGIC_S   , &kp S)
        MAGIC_LAYER(MAGIC_K   , &kp K)
        MAGIC_LAYER(MAGIC_T   , &kp T)
        MAGIC_LAYER(MAGIC_ION , &mg_ion)
        MAGIC_LAYER(MAGIC_A   , &kp A)
        MAGIC_LAYER(MAGIC_L   , &kp L)
        MAGIC_LAYER(MAGIC_M   , &kp M)
        MAGIC_LAYER(MAGIC_E   , &kp E)
        MAGIC_LAYER(MAGIC_P   , &kp P)
        MAGIC_LAYER(MAGIC_F   , &kp F)
    };
};
